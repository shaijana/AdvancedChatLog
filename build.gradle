import javax.net.ssl.HttpsURLConnection

plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
	id "io.freefair.lombok" version "8.4"
	id "com.diffplug.spotless" version "6.22.0"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

Properties additionalProperties = new Properties()
if (file("extra.properties").exists()) {
	additionalProperties.load(file("extra.properties").newReader())
}


repositories {
	mavenCentral()
	maven { url 'https://masa.dy.fi/maven' }
	maven { url 'https://jitpack.io' }
	maven { url 'https://repo.fabim.de/repository/maven-public/' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation "fi.dy.masa.malilib:malilib-fabric-${project.minecraft_version}:${project.malilib_version}"
	modImplementation "io.github.darkkronicle:AdvancedChatCore:${project.minecraft_version}-${project.advancedchat_version}"
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

tasks.register('sourcesJar', Jar) {
	dependsOn classes
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from "LICENSE.txt"
}

//Fabim start
/*spotless {
	ratchetFrom 'origin/main'
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {*/
//		target 'src/*/java/**/*.java'
/*		licenseHeaderFile "HEADER.txt"
	}
}*/
//Fabim end

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		repositories {
			maven {
				name = "fabimRepo"
				url = uri("https://repo.fabim.de/repository/maven-mixed/")
				credentials(PasswordCredentials.class)
			}
		}
	}
}
